name: make

on:
  pull_request:
    paths:
      - .github/workflows/make.yml
  workflow_call:
    inputs:
      release:
        default: false
        required: false
        type: boolean
      upload:
        default: false
        required: false
        type: boolean

jobs:
  make:
    runs-on: ubuntu-latest
    container: ubuntu
    # ^^ with the standard github ubuntu image the build fails
    steps:
    - uses: actions/checkout@v3

    - name: apt deps
      env:
        DEBIAN_FRONTEND: noninteractive
        TZ: Etc/UTC
      run: |
        apt-get --yes update

        # packaging texlive is a world of pain
        apt-get --yes install \
          texlive-latex-base \
          texlive-fonts-recommended \
          texlive-fonts-extra \
          texlive \
          texlive-latex-extra \
          texlive-xetex \
          texlive-lang-all

        # fonts we need
        apt-get --yes install fonts-noto fonts-noto-cjk

    - uses: teaxyz/setup@v0

    - name: Set Version - Release
      if: ${{ inputs.release }}
      run: echo "- \\\\fancyfoot[L]{$VERSION}" >> metadata.yml
    - name: Set Version - CI/CD
      if: ${{ !inputs.release }}
      run: |
        date=$(date '+%Y%m%d')
        echo "- \\\\fancyfoot[L]{$VERSION+$date}" >> metadata.yml

    - run: tea -E make

    - uses: actions/upload-artifact@v3
      with:
        name: tea.white-paper
        path: |
          tea.white-paper.pdf
          tea.white-paper_??.pdf

    # Following steps only run for upload: true
    - name: AWS credentials
      if: ${{ inputs.upload }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Bundle translations
      if: ${{ inputs.upload }}
      run: |
        mkdir white-papers
        cp tea.white-paper_??.pdf white-papers/
    - name: Bundle release
      if: ${{ inputs.upload && inputs.release }}
      run: cp tea.white-paper.pdf white-papers/

    - name: Upload to S3
      if: ${{ inputs.upload }}
      run: |
        aws s3 sync \
          ./white-papers s3://www.tea.xyz/ \
          --metadata-directive REPLACE \
          --cache-control no-cache,must-revalidate
    - name: Invalidate cache
      if: ${{ inputs.upload }}
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.AWS_CF_DISTRIBUTION_ID }} \
          --paths / /tea.white-paper*.pdf
